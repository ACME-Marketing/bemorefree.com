---
import BaseLayout from '../../layouts/BaseLayout.astro';
import BookingButton from '../../components/BookingButton.astro';
import { graphQLClient, gql } from '../../lib/graphql';
import { normalizeSlug, formatDate, calculateReadingTime } from '../../lib/utils.js';

export async function getStaticPaths() {
  const GET_FILTERED_POST_SLUGS = gql`
    query GetFilteredPostSlugs {
      posts(first: 100, where: { tagSlugIn: ["bemorefree", "all"] }) {
        nodes {
          uri
        }
      }
    }
  `;
  const data = await graphQLClient.request(GET_FILTERED_POST_SLUGS);
  return data.posts.nodes.map((post) => ({
    params: { slug: normalizeSlug(post.uri) },
  }));
}

const GET_SINGLE_POST = gql`
  query GetSinglePost($uri: String!) {
    postBy(uri: $uri) {
      title
      content
      excerpt
      date
      featuredImage {
        node {
          sourceUrl
          altText
          mediaDetails {
            width
            height
          }
        }
      }
      tags {
        nodes {
          name
          slug
        }
      }
    }
  }
`;

const { slug } = Astro.params;
const uri = `/${slug}/`;

let post = null;
let allPosts = [];

try {
  const data = await graphQLClient.request(GET_SINGLE_POST, { uri });
  post = data.postBy;

  // Fetch filtered posts to determine previous/next and sidebar
  const GET_FILTERED_POSTS = gql`
    query GetFilteredPosts {
      posts(first: 100, where: { tagSlugIn: ["bemorefree", "all"] }) {
        nodes {
          title
          uri
          date
          tags {
            nodes {
              slug
            }
          }
        }
      }
    }
  `;
  const allPostsData = await graphQLClient.request(GET_FILTERED_POSTS);
  allPosts = allPostsData.posts.nodes;

} catch (error) {
  console.error("Error fetching post or all posts:", error);
}

if (!post) {
  return Astro.redirect('/404');
}

// Calculate reading time and format date
const readingTime = calculateReadingTime(post.content);
const postDate = formatDate(post.date);

// Logic for previous/next posts and sidebar
const currentPostIndex = allPosts.findIndex(p => p.uri === uri);
const prevPost = currentPostIndex > 0 ? allPosts[currentPostIndex - 1] : null;
const nextPost = currentPostIndex < allPosts.length - 1 ? allPosts[currentPostIndex + 1] : null;

const sidebarPosts = allPosts.filter(p => p.uri !== uri).slice(0, 5);
---

<BaseLayout title={`${post.title} - Be More Free Blog`}>
  <!-- Hero Section -->
  <section class="relative py-16 overflow-hidden">
    <div class="absolute inset-0 bg-gradient-to-br from-primary-50 via-white to-accent-50"></div>
    
    <div class="container mx-auto px-4 relative z-10">
      <div class="max-w-4xl mx-auto">
        {/* Breadcrumb */}
        <nav class="mb-8">
          <a href="/blog" class="text-primary-600 hover:text-primary-700 font-medium transition-colors">
            ← Back
          </a>
        </nav>
        
        {/* Article Header */}
        <header class="text-center mb-12">
          <h1 class="text-4xl md:text-5xl font-black text-gray-900 mb-6 leading-tight">
            {post.title}
          </h1>
          
          <div class="flex items-center justify-center gap-6 text-gray-600">
            <time datetime={post.date} class="flex items-center gap-2">
              <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"></path>
              </svg>
              {postDate}
            </time>
            <span class="text-gray-400">•</span>
            <span class="flex items-center gap-2">
              <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
              </svg>
              {readingTime} min read
            </span>
            {post.tags && post.tags.nodes.length > 0 && (
              <>
                <span class="text-gray-400">•</span>
                <span class="text-primary-600 font-medium">{post.tags.nodes[0].name}</span>
              </>
            )}
          </div>
        </header>
      </div>
    </div>
  </section>

  <div class="container mx-auto px-4 pb-16">
    <div class="flex flex-col lg:flex-row gap-12 max-w-7xl mx-auto">
      <!-- Main Content Area -->
      <main class="lg:w-3/4">
        <article class="bg-white rounded-2xl shadow-lg overflow-hidden">
          {post.featuredImage && post.featuredImage.node && (
            <div class="aspect-video overflow-hidden">
              <img 
                src={post.featuredImage.node.sourceUrl} 
                alt={post.featuredImage.node.altText || post.title} 
                width={post.featuredImage.node.mediaDetails.width} 
                height={post.featuredImage.node.mediaDetails.height} 
                class="w-full h-full object-cover"
              />
            </div>
          )}
          
          <div class="p-8 lg:p-12">
            <div 
              class="prose prose-lg max-w-none prose-headings:text-gray-900 prose-p:text-gray-700 prose-a:text-primary-600 hover:prose-a:text-primary-700 prose-strong:text-gray-900" 
              set:html={post.content} 
            />
          </div>
        </article>

        <!-- Call to Action -->
        <div class="mt-12 bg-gradient-to-br from-primary-50 to-accent-50 rounded-2xl p-8 text-center border border-primary-100">
          <h3 class="text-2xl font-bold text-gray-900 mb-4">
            Ready to Experience the Neutral Zone?
          </h3>
          <p class="text-gray-700 mb-6 max-w-2xl mx-auto">
            See what it's like to explore your own material in a completely neutral, 
            judgment-free space. Book a free 30-minute trial session.
          </p>
          <BookingButton 
            type="free"
            text="Book Your Free Trial"
            className="bg-gradient-to-r from-primary-600 to-accent-500 text-white px-8 py-4 rounded-full font-semibold hover:shadow-lg transform hover:scale-105 transition-all duration-300 inline-flex items-center" />
        </div>

        <!-- Previous/Next Navigation -->
        <nav class="flex flex-col sm:flex-row gap-4 mt-12">
          {prevPost && (
            <a 
              href={`/blog/${normalizeSlug(prevPost.uri)}`} 
              class="flex-1 p-6 bg-gradient-to-br from-primary-50 to-accent-50 border border-primary-200 rounded-xl hover:shadow-lg transition-all duration-300 text-center group"
            >
              <p class="text-sm text-gray-600 mb-2">← Previous Post</p>
              <h3 class="text-lg font-semibold text-gray-900 group-hover:text-primary-600 transition-colors">
                {prevPost.title}
              </h3>
            </a>
          )}
          {nextPost && (
            <a 
              href={`/blog/${normalizeSlug(nextPost.uri)}`} 
              class="flex-1 p-6 bg-gradient-to-br from-accent-50 to-primary-50 border border-accent-200 rounded-xl hover:shadow-lg transition-all duration-300 text-center group"
            >
              <p class="text-sm text-gray-600 mb-2">Next Post →</p>
              <h3 class="text-lg font-semibold text-gray-900 group-hover:text-accent-600 transition-colors">
                {nextPost.title}
              </h3>
            </a>
          )}
        </nav>
      </main>

      <!-- Sidebar -->
      <aside class="lg:w-1/4">
        <div class="bg-white rounded-2xl shadow-lg p-6 sticky top-8">
          <h3 class="text-xl font-bold text-gray-900 mb-6">More Insights</h3>
          
          <div class="space-y-4">
            {sidebarPosts.map((p) => (
              <article class="group">
                <a 
                  href={`/blog/${normalizeSlug(p.uri)}`} 
                  class="block p-4 rounded-lg border border-gray-100 hover:border-primary-200 hover:bg-primary-50 transition-all duration-200"
                >
                  <h4 class="font-semibold text-gray-900 group-hover:text-primary-600 transition-colors leading-snug">
                    {p.title}
                  </h4>
                  {p.date && (
                    <time class="text-sm text-gray-500 mt-2 block">
                      {formatDate(p.date)}
                    </time>
                  )}
                </a>
              </article>
            ))}
          </div>
          
          {sidebarPosts.length === 0 && (
            <p class="text-gray-500 text-center py-8">
              More articles coming soon...
            </p>
          )}
          
          <div class="mt-8 pt-6 border-t border-gray-200">
            <a 
              href="/blog" 
              class="w-full bg-primary-600 text-white px-4 py-2 rounded-lg font-medium hover:bg-primary-700 transition-colors text-center block"
            >
              View All Posts
            </a>
          </div>
        </div>
      </aside>
    </div>
  </div>
</BaseLayout>
